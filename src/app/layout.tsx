"use client";
import { AppSidebar } from "@/components/app-sidebar";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import "./globals.css";
import {
  SidebarEditorContext,
  SidebarEditorProvider,
} from "@/components/sidebar/SidebarEditorProvider";
import { Tabs, TabsContent } from "@/components/ui/tabs";
import TextEditor from "@/components/sidebar/text-editor";
import { useContext, useState } from "react";
import dynamic from "next/dynamic";
import ImagesUpload from "@/components/images-upload";
import AppContent from "@/components/app-content";

const TextEffects = dynamic(() => import("@/components/text-effects"), {
  ssr: false,
});
const ShapesList = dynamic(() => import("@/components/shapes-list"), {
  ssr: false,
});
const poppins = Poppins({
  subsets: ["latin"],
  variable: "--font-poppins",
  weight: ["400", "500", "600", "700"],
  display: "swap",
});
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [openTab, setOpenTab] = useState<string | undefined>(undefined);
  const closeTabs = () => setOpenTab("");
  const {
    setSelectedElement,
    setSelectedId,
    setSelectedImageId,
    handleDeselect,
    setSelectedImage,
  } = useContext(SidebarEditorContext);
  return (
    <html lang="en">
      <body className={`${poppins.variable} antialiased`}>
        <SidebarEditorProvider>
          <Tabs
            value={openTab}
            onValueChange={setOpenTab}
            orientation="vertical"
          >
            <SidebarProvider className="w-full">
              <AppSidebar />
              <main className="flex w-full bg-gray-200 items-start">
                <div className="">
                  <TabsContent
                    closeTab={closeTabs}
                    className="w-[350px] border shadow-lg p-4"
                    value="text"
                  >
                    <TextEditor />
                  </TabsContent>
                  <TabsContent
                    closeTab={closeTabs}
                    className="w-[350px] border shadow-lg p-4"
                    value="images"
                  >
                    <ImagesUpload />
                  </TabsContent>
                  <TabsContent
                    closeTab={closeTabs}
                    className="w-[350px] border shadow-lg p-4"
                    value="shapes"
                  >
                    <ShapesList />
                  </TabsContent>
                  <TabsContent
                    closeTab={closeTabs}
                    className="w-[350px] border shadow-lg p-4"
                    value="text-effects"
                  >
                    <TextEffects />
                  </TabsContent>
                </div>
                <AppContent>{children}</AppContent>
              </main>
            </SidebarProvider>
          </Tabs>
        </SidebarEditorProvider>
      </body>
    </html>
  );
}
